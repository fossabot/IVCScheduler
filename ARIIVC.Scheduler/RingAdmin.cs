    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:4.0.30319.42000
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------

    using System;
    using System.ComponentModel;
    using System.Diagnostics;
    using System.Web.Services;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;

    // 
    // This source code was auto-generated by wsdl, Version=4.0.30319.17929.
    // 


    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "ReleaseServicesIFBinding", Namespace = "urn:ADP:SOAP/ReleaseServices")]
    public partial class ReleaseServicesService : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback QARef_GetReleasesOperationCompleted;

        private System.Threading.SendOrPostCallback QARef_SubmitReleasesOperationCompleted;

        private System.Threading.SendOrPostCallback QARef_GetQAsOperationCompleted;

        private System.Threading.SendOrPostCallback QARef_GetQAReleasesOperationCompleted;

        private System.Threading.SendOrPostCallback GetRingMastersOperationCompleted;

        private System.Threading.SendOrPostCallback GetReleaseScheduleOperationCompleted;

        private System.Threading.SendOrPostCallback GetPendingReleasesOperationCompleted;

        /// <remarks/>
        public ReleaseServicesService()
        {
            this.Url = "http://d-re-mt-ringadm.dslab.ad.adp.com:790/DriveMT/ReleaseServices/ReleaseServic" +
                "esIF";
        }

        /// <remarks/>
        public event QARef_GetReleasesCompletedEventHandler QARef_GetReleasesCompleted;

        /// <remarks/>
        public event QARef_SubmitReleasesCompletedEventHandler QARef_SubmitReleasesCompleted;

        /// <remarks/>
        public event QARef_GetQAsCompletedEventHandler QARef_GetQAsCompleted;

        /// <remarks/>
        public event QARef_GetQAReleasesCompletedEventHandler QARef_GetQAReleasesCompleted;

        /// <remarks/>
        public event GetRingMastersCompletedEventHandler GetRingMastersCompleted;

        /// <remarks/>
        public event GetReleaseScheduleCompletedEventHandler GetReleaseScheduleCompleted;

        /// <remarks/>
        public event GetPendingReleasesCompletedEventHandler GetPendingReleasesCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF#QARef_GetReleases", RequestNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF", ResponseNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool QARef_GetReleases(string sQuery, ref string sJSON)
        {
            object[] results = this.Invoke("QARef_GetReleases", new object[] {
                    sQuery,
                    sJSON});
            sJSON = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQARef_GetReleases(string sQuery, string sJSON, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QARef_GetReleases", new object[] {
                    sQuery,
                    sJSON}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndQARef_GetReleases(System.IAsyncResult asyncResult, out string sJSON)
        {
            object[] results = this.EndInvoke(asyncResult);
            sJSON = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void QARef_GetReleasesAsync(string sQuery, string sJSON)
        {
            this.QARef_GetReleasesAsync(sQuery, sJSON, null);
        }

        /// <remarks/>
        public void QARef_GetReleasesAsync(string sQuery, string sJSON, object userState)
        {
            if ((this.QARef_GetReleasesOperationCompleted == null))
            {
                this.QARef_GetReleasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQARef_GetReleasesOperationCompleted);
            }
            this.InvokeAsync("QARef_GetReleases", new object[] {
                    sQuery,
                    sJSON}, this.QARef_GetReleasesOperationCompleted, userState);
        }

        private void OnQARef_GetReleasesOperationCompleted(object arg)
        {
            if ((this.QARef_GetReleasesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QARef_GetReleasesCompleted(this, new QARef_GetReleasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF#QARef_SubmitReleases", RequestNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF", ResponseNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool QARef_SubmitReleases(string sJSON)
        {
            object[] results = this.Invoke("QARef_SubmitReleases", new object[] {
                    sJSON});
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQARef_SubmitReleases(string sJSON, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QARef_SubmitReleases", new object[] {
                    sJSON}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndQARef_SubmitReleases(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void QARef_SubmitReleasesAsync(string sJSON)
        {
            this.QARef_SubmitReleasesAsync(sJSON, null);
        }

        /// <remarks/>
        public void QARef_SubmitReleasesAsync(string sJSON, object userState)
        {
            if ((this.QARef_SubmitReleasesOperationCompleted == null))
            {
                this.QARef_SubmitReleasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQARef_SubmitReleasesOperationCompleted);
            }
            this.InvokeAsync("QARef_SubmitReleases", new object[] {
                    sJSON}, this.QARef_SubmitReleasesOperationCompleted, userState);
        }

        private void OnQARef_SubmitReleasesOperationCompleted(object arg)
        {
            if ((this.QARef_SubmitReleasesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QARef_SubmitReleasesCompleted(this, new QARef_SubmitReleasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF#QARef_GetQAs", RequestNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF", ResponseNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool QARef_GetQAs(string sRelease, ref string sJSON)
        {
            object[] results = this.Invoke("QARef_GetQAs", new object[] {
                    sRelease,
                    sJSON});
            sJSON = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQARef_GetQAs(string sRelease, string sJSON, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QARef_GetQAs", new object[] {
                    sRelease,
                    sJSON}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndQARef_GetQAs(System.IAsyncResult asyncResult, out string sJSON)
        {
            object[] results = this.EndInvoke(asyncResult);
            sJSON = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void QARef_GetQAsAsync(string sRelease, string sJSON)
        {
            this.QARef_GetQAsAsync(sRelease, sJSON, null);
        }

        /// <remarks/>
        public void QARef_GetQAsAsync(string sRelease, string sJSON, object userState)
        {
            if ((this.QARef_GetQAsOperationCompleted == null))
            {
                this.QARef_GetQAsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQARef_GetQAsOperationCompleted);
            }
            this.InvokeAsync("QARef_GetQAs", new object[] {
                    sRelease,
                    sJSON}, this.QARef_GetQAsOperationCompleted, userState);
        }

        private void OnQARef_GetQAsOperationCompleted(object arg)
        {
            if ((this.QARef_GetQAsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QARef_GetQAsCompleted(this, new QARef_GetQAsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF#QARef_GetQAReleases", RequestNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF", ResponseNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool QARef_GetQAReleases(float iQA, ref string sResponse)
        {
            object[] results = this.Invoke("QARef_GetQAReleases", new object[] {
                    iQA,
                    sResponse});
            sResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginQARef_GetQAReleases(float iQA, string sResponse, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("QARef_GetQAReleases", new object[] {
                    iQA,
                    sResponse}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndQARef_GetQAReleases(System.IAsyncResult asyncResult, out string sResponse)
        {
            object[] results = this.EndInvoke(asyncResult);
            sResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void QARef_GetQAReleasesAsync(float iQA, string sResponse)
        {
            this.QARef_GetQAReleasesAsync(iQA, sResponse, null);
        }

        /// <remarks/>
        public void QARef_GetQAReleasesAsync(float iQA, string sResponse, object userState)
        {
            if ((this.QARef_GetQAReleasesOperationCompleted == null))
            {
                this.QARef_GetQAReleasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnQARef_GetQAReleasesOperationCompleted);
            }
            this.InvokeAsync("QARef_GetQAReleases", new object[] {
                    iQA,
                    sResponse}, this.QARef_GetQAReleasesOperationCompleted, userState);
        }

        private void OnQARef_GetQAReleasesOperationCompleted(object arg)
        {
            if ((this.QARef_GetQAReleasesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.QARef_GetQAReleasesCompleted(this, new QARef_GetQAReleasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF#GetRingMasters", RequestNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF", ResponseNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool GetRingMasters(ref string sResponse)
        {
            object[] results = this.Invoke("GetRingMasters", new object[] {
                    sResponse});
            sResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRingMasters(string sResponse, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRingMasters", new object[] {
                    sResponse}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetRingMasters(System.IAsyncResult asyncResult, out string sResponse)
        {
            object[] results = this.EndInvoke(asyncResult);
            sResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetRingMastersAsync(string sResponse)
        {
            this.GetRingMastersAsync(sResponse, null);
        }

        /// <remarks/>
        public void GetRingMastersAsync(string sResponse, object userState)
        {
            if ((this.GetRingMastersOperationCompleted == null))
            {
                this.GetRingMastersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRingMastersOperationCompleted);
            }
            this.InvokeAsync("GetRingMasters", new object[] {
                    sResponse}, this.GetRingMastersOperationCompleted, userState);
        }

        private void OnGetRingMastersOperationCompleted(object arg)
        {
            if ((this.GetRingMastersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRingMastersCompleted(this, new GetRingMastersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF#GetReleaseSchedule", RequestNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF", ResponseNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool GetReleaseSchedule(ref string sResponse)
        {
            object[] results = this.Invoke("GetReleaseSchedule", new object[] {
                    sResponse});
            sResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetReleaseSchedule(string sResponse, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetReleaseSchedule", new object[] {
                    sResponse}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetReleaseSchedule(System.IAsyncResult asyncResult, out string sResponse)
        {
            object[] results = this.EndInvoke(asyncResult);
            sResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetReleaseScheduleAsync(string sResponse)
        {
            this.GetReleaseScheduleAsync(sResponse, null);
        }

        /// <remarks/>
        public void GetReleaseScheduleAsync(string sResponse, object userState)
        {
            if ((this.GetReleaseScheduleOperationCompleted == null))
            {
                this.GetReleaseScheduleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReleaseScheduleOperationCompleted);
            }
            this.InvokeAsync("GetReleaseSchedule", new object[] {
                    sResponse}, this.GetReleaseScheduleOperationCompleted, userState);
        }

        private void OnGetReleaseScheduleOperationCompleted(object arg)
        {
            if ((this.GetReleaseScheduleCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReleaseScheduleCompleted(this, new GetReleaseScheduleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF#GetPendingReleases", RequestNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF", ResponseNamespace = "urn:ADP:SOAP/ReleaseServices/ReleaseServicesIF")]
        [return: System.Xml.Serialization.SoapElementAttribute("return")]
        public bool GetPendingReleases(ref string sResponse)
        {
            object[] results = this.Invoke("GetPendingReleases", new object[] {
                    sResponse});
            sResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetPendingReleases(string sResponse, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetPendingReleases", new object[] {
                    sResponse}, callback, asyncState);
        }

        /// <remarks/>
        public bool EndGetPendingReleases(System.IAsyncResult asyncResult, out string sResponse)
        {
            object[] results = this.EndInvoke(asyncResult);
            sResponse = ((string)(results[1]));
            return ((bool)(results[0]));
        }

        /// <remarks/>
        public void GetPendingReleasesAsync(string sResponse)
        {
            this.GetPendingReleasesAsync(sResponse, null);
        }

        /// <remarks/>
        public void GetPendingReleasesAsync(string sResponse, object userState)
        {
            if ((this.GetPendingReleasesOperationCompleted == null))
            {
                this.GetPendingReleasesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPendingReleasesOperationCompleted);
            }
            this.InvokeAsync("GetPendingReleases", new object[] {
                    sResponse}, this.GetPendingReleasesOperationCompleted, userState);
        }

        private void OnGetPendingReleasesOperationCompleted(object arg)
        {
            if ((this.GetPendingReleasesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPendingReleasesCompleted(this, new GetPendingReleasesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void QARef_GetReleasesCompletedEventHandler(object sender, QARef_GetReleasesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QARef_GetReleasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QARef_GetReleasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string sJSON
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void QARef_SubmitReleasesCompletedEventHandler(object sender, QARef_SubmitReleasesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QARef_SubmitReleasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QARef_SubmitReleasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void QARef_GetQAsCompletedEventHandler(object sender, QARef_GetQAsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QARef_GetQAsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QARef_GetQAsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string sJSON
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void QARef_GetQAReleasesCompletedEventHandler(object sender, QARef_GetQAReleasesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class QARef_GetQAReleasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal QARef_GetQAReleasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string sResponse
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetRingMastersCompletedEventHandler(object sender, GetRingMastersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRingMastersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRingMastersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string sResponse
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetReleaseScheduleCompletedEventHandler(object sender, GetReleaseScheduleCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReleaseScheduleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetReleaseScheduleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string sResponse
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    public delegate void GetPendingReleasesCompletedEventHandler(object sender, GetPendingReleasesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPendingReleasesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetPendingReleasesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
            base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public bool Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }

        /// <remarks/>
        public string sResponse
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
